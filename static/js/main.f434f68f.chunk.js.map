{"version":3,"sources":["Header.js","firebase.js","TinderCards.js","SwipeButton.js","ChatScreen.js","Chat.js","Chats.js","App.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","push","fontSize","to","src","alt","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","auth","firestore","storage","TinderCards","useState","people","setPeople","useEffect","collection","onSnapshot","snp","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","SwipeButton","ChatScreen","input","setInput","image","message","messages","setMessages","Avatar","value","onChange","e","target","placeholder","type","preventDefault","Chat","profilePic","timestamp","Chats","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f434f68f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosSharpIcon from '@material-ui/icons/ArrowBackIosSharp';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Link,useHistory} from 'react-router-dom';\r\n\r\nfunction Header({backButton}) {\r\n    const history=useHistory();\r\n    return (\r\n        <div className=\"header\">\r\n        {backButton? (<IconButton><ArrowBackIosSharpIcon onClick={()=>history.push(backButton)} fontSize=\"large\"/></IconButton>):(<IconButton><PersonIcon fontSize=\"large\"/></IconButton>)}\r\n        \r\n        <Link to=\"/\">\r\n        <img src=\"https://www.1min30.com/logo/wp-content/uploads/2018/04/logo-Tinder-500x281.png\" className=\"image\" alt=\"\" />\r\n        </Link>\r\n        <NavLink to=\"./chat\"><IconButton><ForumIcon fontSize=\"large\"/></IconButton></NavLink>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBr7T__Te-kH5tBbyUiX72g7KNNWIg3_Zw\",\r\n    authDomain: \"tinder-clone-d4d02.firebaseapp.com\",\r\n    projectId: \"tinder-clone-d4d02\",\r\n    storageBucket: \"tinder-clone-d4d02.appspot.com\",\r\n    messagingSenderId: \"308110142665\",\r\n    appId: \"1:308110142665:web:0fd0ab638396412a91b118\",\r\n    measurementId: \"G-9WSZRVVD53\"\r\n  };\r\n\r\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\r\nconst auth=firebaseApp.auth();\r\nconst db=firebaseApp.firestore();\r\nconst storage=firebaseApp.storage();\r\nexport {db,auth,storage};  ","import React,{useState,useEffect} from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\n\r\nimport {db} from './firebase';\r\nimport './TinderCards.css';\r\n\r\nfunction TinderCards() {\r\n    const [people,setPeople]=useState([])\r\n    useEffect(()=>{\r\n        db.collection('people').onSnapshot(snp=>{\r\n            // console.log(snp.docs);\r\n            // this is also correct\r\n            // setPeople(snp.docs.map(doc=>({\r\n            //     id:doc.id,\r\n            //     name:doc.data().name,\r\n            //     url:doc.data().url,\r\n            // })\r\n              setPeople(snp.docs.map(doc=>doc.data()))\r\n                \r\n            \r\n            \r\n        })\r\n    },[people])\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n           {people.map((person)=>{\r\n\r\n               return <TinderCard className=\"swipe\" key={person.name} preventSwipe={['up','down']}>\r\n                   <div className=\"card\" style={{backgroundImage:`url(${person.url})`}}>\r\n                   <h3>{person.name}</h3>\r\n                   </div>\r\n               </TinderCard>\r\n           })} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavouriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport './SwipeButton.css';\r\n\r\nfunction SwipeButton() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n        <IconButton>\r\n            <ReplayIcon fontSize=\"large\" className=\"replay\"/>\r\n            </IconButton>\r\n            <IconButton>\r\n            <CloseIcon fontSize=\"large\" className=\"close\" /></IconButton>\r\n        <IconButton>\r\n            <StarRateIcon fontSize=\"large\" className=\"star\" /></IconButton>\r\n            <IconButton>\r\n            <FavouriteIcon fontSize=\"large\" className=\"favorite\" /></IconButton>\r\n        <IconButton>\r\n            <FlashOnIcon fontSize=\"large\" className=\"flash\" /></IconButton>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButton\r\n","import React, { useState} from \"react\";\r\nimport \"./ChatScreen.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nfunction ChatScreen(){\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            name: \"Mark\",\r\n            image: \"https://images.unsplash.com/photo-1539664283826-8747535c24a3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n            message: \"what's up ❤\"\r\n        },\r\n        {\r\n            message: \"Hi, how's you?\"\r\n        }\r\n    ]);\r\n\r\n    const handleSend = e => {\r\n        e.preventDefault();\r\n        setMessages([...messages, {message: input}]);\r\n        setInput(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chatScreen\" >\r\n            <p className=\"chatScreen__timeStamp\"> \r\n            YOU MATCHED WITH {messages.name} ON 10/08/20 </p>\r\n            {messages.map((message) => \r\n            (\r\n                message.name ? \r\n                (\r\n                    <div className=\"chatScreen__message\">\r\n                    <Avatar\r\n                    className=\"chatScreen__image\"\r\n                    alt={message.name}\r\n                    src={message.image}\r\n                    />\r\n                    <p className=\"chatScreen__text\">\r\n                        {message.message}</p>\r\n                    </div>\r\n                ) : (\r\n                        <div className=\"chatScreen__message\">\r\n                         <p className=\"chatScreen__textUser\">\r\n                         {message.message}</p>\r\n                        </div>\r\n                    )\r\n            )\r\n            )}\r\n\r\n                <form className=\"chatScreen__input\">\r\n                    <input \r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    className=\"chatScreen__inputField\" \r\n                    placeholder=\"type a messgae...\"\r\n                    type=\"text\"\r\n                    />\r\n                    <button onClick={handleSend} type=\"submit\" className=\"chatScreen__inputButton\">SEND</button>\r\n                </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatScreen;\r\n","import React from 'react';\r\nimport  \"./Chats.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Chat({ name, message, profilePic, timestamp}){\r\n    return (\r\n        <Link to={`/chat/${name}`}>\r\n          <div className=\"chat\">\r\n          \r\n            <Avatar className=\"chat__image\"  src={profilePic}/>\r\n            \r\n                <div className=\"chat__details\">\r\n                 <h2>{name}</h2>\r\n                 <p>{message}</p>\r\n                </div>\r\n            <p className=\"chat__timestamp\">{timestamp}</p>\r\n            \r\n          </div>\r\n        </Link>\r\n       \r\n    );\r\n    \r\n}\r\n\r\nexport default Chat;","import React from 'react'\r\nimport Chat from './Chat';\r\nimport './Chats.css';\r\n\r\nconst Chats = () => {\r\n    return (\r\n        <div className=\"chats\">\r\n        <Chat \r\n            name=\"Mark\"\r\n            message=\"hey! there i'm using Tinder\"\r\n            timestamp=\"34seconds ago\"\r\n            profilePic=\"https://images.unsplash.com/photo-1539664283826-8747535c24a3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\r\n        />\r\n\r\n        <Chat \r\n            name=\"Sonny\"\r\n            message=\"hey! there i'm using Tinder\"\r\n            timestamp=\"7 seconds ago\"\r\n            profilePic=\"https://images.unsplash.com/photo-1594045073084-120ef0d151bc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\r\n        />\r\n\r\n        <Chat \r\n            name=\"Sandara\"\r\n            message=\"hey! there i'm using Tinder\"\r\n            timestamp=\"39 seconds ago\"\r\n            profilePic=\"https://images.unsplash.com/photo-1597265870741-c672c939ca0a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=282&q=80\"\r\n        />\r\n\r\n        <Chat \r\n            name=\"Sarah\"\r\n            message=\"hey! there i'm using Tinder\"\r\n            timestamp=\"55 seconds ago\"\r\n            profilePic=\"https://images.unsplash.com/photo-1573341830496-e89fcae7f5eb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chats\r\n","import React from 'react';\nimport Header from './Header';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport TinderCards from './TinderCards';\nimport './App.css';\nimport SwipeButtons from './SwipeButton';\nimport ChatScreen from './ChatScreen';\nimport Chats from './Chats';\n\n// All use default route at the last of the switch\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n      <Router> \n        <Switch>\n        <Route path=\"/chat/:person\">\n           <Header backButton=\"/chat\" />\n            <ChatScreen/>\n            \n          </Route>\n          <Route path=\"/chat\">\n           <Header backButton=\"/\" />\n            <Chats/>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n              <TinderCards/>\n              <SwipeButtons/>\n          </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}